diff --git a/src/Graphics_SoftGPU.c b/src/Graphics_SoftGPU.c
index 156834a82..206978b4c 100644
--- a/src/Graphics_SoftGPU.c
+++ b/src/Graphics_SoftGPU.c
@@ -410,10 +410,11 @@ static void DrawSprite2D(Vertex* V0, Vertex* V1, Vertex* V2) {
 	minX = max(minX, 0); maxX = min(maxX, fb_maxX);
 	minY = max(minY, 0); maxY = min(maxY, fb_maxY);
 
-	for (int y = minY; y <= maxY; y++) 
+	int x,y;
+	for (y = minY; y <= maxY; y++)
 	{
 		int texY = fast ? (begTY + (y - minY)) : (((begTY + delTY * (y - minY) / height)) & texHeightMask);
-		for (int x = minX; x <= maxX; x++) 
+		for (x = minX; x <= maxX; x++)
 		{
 			int texX = fast ? (begTX + (x - minX)) : (((begTX + delTX * (x - minX) / width)) & texWidthMask);
 			int texIndex = texY * curTexWidth + texX;
@@ -492,13 +493,14 @@ static void DrawTriangle2D(Vertex* V0, Vertex* V1, Vertex* V2) {
 	float bc1_start = edgeFunction(x2,y2, x0,y0, minX+0.5f,minY+0.5f);
 	float bc2_start = edgeFunction(x0,y0, x1,y1, minX+0.5f,minY+0.5f);
 
-	for (int y = minY; y <= maxY; y++, bc0_start += dy12, bc1_start += dy20, bc2_start += dy01) 
+	int x,y;
+	for (y = minY; y <= maxY; y++, bc0_start += dy12, bc1_start += dy20, bc2_start += dy01)
 	{
 		float bc0 = bc0_start;
 		float bc1 = bc1_start;
 		float bc2 = bc2_start;
 
-		for (int x = minX; x <= maxX; x++, bc0 += dx12, bc1 += dx20, bc2 += dx01) 
+		for (x = minX; x <= maxX; x++, bc0 += dx12, bc1 += dx20, bc2 += dx01)
 		{
 			float ic0 = bc0 * factor;
 			float ic1 = bc1 * factor;
@@ -631,13 +633,14 @@ static void DrawTriangle3D(Vertex* V0, Vertex* V1, Vertex* V2) {
 		texturing = false;
 	}
 
-	for (int y = minY; y <= maxY; y++, bc0_start += dy12, bc1_start += dy20, bc2_start += dy01) 
+	int x,y;
+	for (y = minY; y <= maxY; y++, bc0_start += dy12, bc1_start += dy20, bc2_start += dy01)
 	{
 		float bc0 = bc0_start;
 		float bc1 = bc1_start;
 		float bc2 = bc2_start;
 
-		for (int x = minX; x <= maxX; x++, bc0 += dx12, bc1 += dx20, bc2 += dx01) 
+		for (x = minX; x <= maxX; x++, bc0 += dx12, bc1 += dx20, bc2 += dx01)
 		{
 			float ic0 = bc0 * factor;
 			float ic1 = bc1 * factor;
@@ -963,7 +966,8 @@ void DrawQuads(int startVertex, int verticesCount, DrawHints hints) {
 
 	if (gfx_rendering2D && hints == DRAW_HINT_SPRITE) {
 		// 4 vertices = 1 quad = 2 triangles
-		for (int i = 0; i < verticesCount / 4; i++, j += 4)
+		int i;
+		for (i = 0; i < verticesCount / 4; i++, j += 4)
 		{
 			TransformVertex2D(j + 0, &vertices[0]);
 			TransformVertex2D(j + 1, &vertices[1]);
@@ -973,7 +977,8 @@ void DrawQuads(int startVertex, int verticesCount, DrawHints hints) {
 		}
 	} else if (gfx_rendering2D) {
 		// 4 vertices = 1 quad = 2 triangles
-		for (int i = 0; i < verticesCount / 4; i++, j += 4)
+		int i;
+		for (i = 0; i < verticesCount / 4; i++, j += 4)
 		{
 			TransformVertex2D(j + 0, &vertices[0]);
 			TransformVertex2D(j + 1, &vertices[1]);
@@ -985,7 +990,8 @@ void DrawQuads(int startVertex, int verticesCount, DrawHints hints) {
 		}
 	} else {
 		// 4 vertices = 1 quad = 2 triangles
-		for (int i = 0; i < verticesCount / 4; i++, j += 4)
+		int i;
+		for (i = 0; i < verticesCount / 4; i++, j += 4)
 		{
 			int clip = TransformVertex3D(j + 0, &vertices[0]) << 0
 					|  TransformVertex3D(j + 1, &vertices[1]) << 1
